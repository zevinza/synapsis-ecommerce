{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation",
        "title": "MKP Cinema Ticketing",
        "contact": {
            "name": "Armada Muhammad Siswanto",
            "email": "armadamuhammads@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "description": "show basic response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show basic response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/accounts/change-password": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChangePasswordAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/accounts/login": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Login into Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login into Account",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account data",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/accounts/register": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Register new Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Register new Account",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/carts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List of Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "List of Cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cart",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Cart"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Create new Cart",
                "parameters": [
                    {
                        "description": "Cart data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CartPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Cart data",
                        "schema": {
                            "$ref": "#/definitions/model.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/carts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a Cart by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get a Cart by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart data",
                        "schema": {
                            "$ref": "#/definitions/model.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Cart by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Update Cart by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cart data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CartAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart data",
                        "schema": {
                            "$ref": "#/definitions/model.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Cart by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Delete Cart by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/info.json": {
            "get": {
                "description": "show info response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show info response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/show-schedules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List of Show Schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ShowSchedule"
                ],
                "summary": "List of Show Schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Show Schedule",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ShowSchedule"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Show Schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ShowSchedule"
                ],
                "summary": "Create new Show Schedule",
                "parameters": [
                    {
                        "description": "Show Schedule data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ShowScheduleAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Show Schedule data",
                        "schema": {
                            "$ref": "#/definitions/model.ShowSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/show-schedules/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a Show Schedule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ShowSchedule"
                ],
                "summary": "Get a Show Schedule by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Show Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Schedule data",
                        "schema": {
                            "$ref": "#/definitions/model.ShowSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Show Schedule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ShowSchedule"
                ],
                "summary": "Update Show Schedule by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Show Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Show Schedule data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ShowScheduleAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Schedule data",
                        "schema": {
                            "$ref": "#/definitions/model.ShowSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Show Schedule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ShowSchedule"
                ],
                "summary": "Delete Show Schedule by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Show Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List of Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List of Transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Transaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{cart_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Post new Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Post new Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a Transaction by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a Transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel Unpaid Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancel Unpaid Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}/payment": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Pay Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Pay Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionPaymentAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionPayment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List of User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List of User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of User",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create new User",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lib.Page": {
            "type": "object",
            "properties": {
                "first": {
                    "description": "indicate first value",
                    "type": "boolean",
                    "example": true
                },
                "items": {
                    "type": "object"
                },
                "last": {
                    "description": "indicate last value",
                    "type": "boolean",
                    "example": false
                },
                "max_page": {
                    "description": "maximum pages for current schema",
                    "type": "integer",
                    "example": 9
                },
                "page": {
                    "description": "current page, start from zero",
                    "type": "integer",
                    "example": 0
                },
                "size": {
                    "description": "size per page, default `10`",
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "description": "total data without filters",
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "description": "total pages",
                    "type": "integer",
                    "example": 10
                },
                "visible": {
                    "description": "current length",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "lib.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "response message",
                    "type": "string"
                },
                "status": {
                    "description": "http status",
                    "type": "integer"
                }
            }
        },
        "model.Cart": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "seat_ids": {
                    "type": "string"
                },
                "seats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Seat"
                    }
                },
                "show_schedule": {
                    "$ref": "#/definitions/model.ShowSchedule"
                },
                "show_schedule_id": {
                    "description": "UserID",
                    "type": "string",
                    "format": "uuid"
                },
                "total_price": {
                    "type": "number"
                },
                "user_id": {
                    "description": "UserID",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.CartAPI": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "seat_ids": {
                    "type": "string"
                },
                "show_schedule_id": {
                    "description": "UserID",
                    "type": "string",
                    "format": "uuid"
                },
                "total_price": {
                    "type": "number"
                },
                "user_id": {
                    "description": "UserID",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.CartPayload": {
            "type": "object",
            "properties": {
                "seatIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "showScheduleID": {
                    "type": "string"
                }
            }
        },
        "model.ChangePasswordAPI": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "@Password123"
                },
                "email": {
                    "type": "string",
                    "example": "armadamuhammads@gmail.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "@Password123"
                }
            }
        },
        "model.CinemaLocation": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.LoginAPI": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "remember": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "type": "string",
                    "example": "armadamuhammads@gmail.com"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "$ref": "#/definitions/model.ResponseToken"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.Movie": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "director": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "producer": {
                    "type": "string"
                }
            }
        },
        "model.RegistrationAPI": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "first_name",
                "password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "@Password123"
                },
                "email": {
                    "type": "string",
                    "example": "armadamuhammads@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Armada"
                },
                "last_name": {
                    "type": "string",
                    "example": "Muhammad"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "@Password123"
                },
                "phone_number": {
                    "type": "string",
                    "example": "089678009400"
                },
                "username": {
                    "type": "string",
                    "example": "armadamuhammads"
                }
            }
        },
        "model.ResponseToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "model.Seat": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "characteristic": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "column": {
                    "type": "string"
                },
                "is_available": {
                    "type": "boolean"
                },
                "row": {
                    "type": "string"
                },
                "seat_layout_id": {
                    "type": "string"
                },
                "show_schedule_id": {
                    "type": "string"
                }
            }
        },
        "model.ShowSchedule": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "cinema_location": {
                    "$ref": "#/definitions/model.CinemaLocation"
                },
                "cinema_location_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "is_start": {
                    "type": "boolean"
                },
                "movie": {
                    "$ref": "#/definitions/model.Movie"
                },
                "movie_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "theater": {
                    "$ref": "#/definitions/model.Theater"
                },
                "theater_id": {
                    "type": "string"
                }
            }
        },
        "model.ShowScheduleAPI": {
            "type": "object",
            "properties": {
                "cinema_location_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "is_start": {
                    "type": "boolean"
                },
                "movie_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "theater_id": {
                    "type": "string"
                }
            }
        },
        "model.Theater": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "cinema_location_id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Ticket": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "is_activated": {
                    "type": "boolean"
                },
                "is_printed": {
                    "type": "boolean"
                },
                "location_name": {
                    "type": "string"
                },
                "movie_name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "reference_number": {
                    "type": "string"
                },
                "seat_code": {
                    "type": "string"
                },
                "show_schedule_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "theater_name": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "booking_code": {
                    "type": "string"
                },
                "contact_detail": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "invoice_no": {
                    "type": "string"
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Ticket"
                    }
                },
                "total_discount": {
                    "type": "number"
                },
                "total_fee": {
                    "type": "number"
                },
                "total_paid": {
                    "type": "number"
                },
                "total_price": {
                    "type": "number"
                },
                "total_ticket_price": {
                    "type": "number"
                },
                "transaction_status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.TransactionPayment": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "number"
                },
                "paid_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "reference_no": {
                    "type": "string"
                },
                "transaction": {
                    "$ref": "#/definitions/model.Transaction"
                },
                "transaction_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "via": {
                    "type": "string"
                }
            }
        },
        "model.TransactionPaymentAPI": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "number"
                },
                "paid_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "reference_no": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "via": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "email": {
                    "description": "Email",
                    "type": "string",
                    "example": "armadamuhammads@gmail.com"
                },
                "first_name": {
                    "description": "FirstName",
                    "type": "string",
                    "example": "Armada"
                },
                "is_admin": {
                    "description": "IsAdmin",
                    "type": "boolean"
                },
                "last_login": {
                    "description": "LastLogin",
                    "type": "string",
                    "format": "date-time"
                },
                "last_name": {
                    "description": "LastName",
                    "type": "string",
                    "example": "Muhammad Siswanto"
                },
                "phone_number": {
                    "description": "PhoneNumber",
                    "type": "string",
                    "example": "089678009400"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                }
            }
        },
        "model.UserAPI": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email",
                    "type": "string",
                    "example": "armadamuhammads@gmail.com"
                },
                "first_name": {
                    "description": "FirstName",
                    "type": "string",
                    "example": "Armada"
                },
                "is_admin": {
                    "description": "IsAdmin",
                    "type": "boolean"
                },
                "last_login": {
                    "description": "LastLogin",
                    "type": "string",
                    "format": "date-time"
                },
                "last_name": {
                    "description": "LastName",
                    "type": "string",
                    "example": "Muhammad Siswanto"
                },
                "phone_number": {
                    "description": "PhoneNumber",
                    "type": "string",
                    "example": "089678009400"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "TokenKey": {
            "type": "apiKey",
            "name": "x-Token",
            "in": "header"
        }
    }
}